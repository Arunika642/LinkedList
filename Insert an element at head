#include <bits/stdc++.h>
using namespace std;

class Node{
    public:
       int data;
       Node* next;
       
       Node(int data1)
       {
           data = data1;
           next = nullptr;
       }
       
       Node(int data1, Node* next1)
       {
           data = data1;
           next = next1;
       }
};

Node* convertarr2LL(vector<int> arr)
{
    if(arr.empty()) return nullptr;
    
    Node* head = new Node(arr[0]);
    Node* mover = head;
    
    for(int i=1;i<arr.size();i++)
    {
        Node* temp = new Node(arr[i]);
        mover->next = temp;
        mover = temp;
    }
    return head;
}

void print(Node* head)
{
  if(head == nullptr) {
        cout << "List is empty\n";
        return;
    }

    
    Node* temp = head;
    while(temp!=nullptr)
    {
        cout << temp->data << " ";
        temp= temp->next;
    }
}

Node* removesHead(Node* head)
{
    if(head == nullptr) return nullptr;
    
    Node* temp = head;
    head = head->next;
    delete temp;
    return head;
}

Node* removesTail(Node* head)
{
    Node* temp = head;
    if(head == NULL || head->next == NULL) return NULL;
    
    while(temp->next->next!= NULL)
    {
        temp = temp->next;
    }
    delete temp->next;
    temp->next = nullptr;
    return head;
}


Node* removesVal(Node* head, int val)
{
    if(head == NULL) return head;
    
    if(head->data == val)
    {
        Node* temp = head;
        head = head->next;
        delete temp;
        return head;
    }
    
    Node* temp = head;
    Node* previous = NULL;
    
    while(temp!=NULL)
    {
        if(temp->data == val)
        {
            previous->next = previous->next->next;
            delete temp;
            return head;
        }
        
        previous = temp;
        temp = temp->next;
        
    }
    return head;
}

Node* insertHead(int val, Node* head)
{
    Node* temp = new Node(val,head);
    return temp;
}
int main() {
    vector<int> arr = {1,2,3,4,5};
    Node* head = convertarr2LL(arr);
    //head = removesHead(head);
    //head = removesTail(head);
    
    int val;
    cin >> val;
    // head = removesVal(head,val);
    head = insertHead(val,head);
    print(head);
}
